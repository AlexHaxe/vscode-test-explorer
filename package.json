{
  "name": "vscode-test-explorer",
  "displayName": "Test Explorer UI",
  "description": "Run your tests in the Sidebar of Visual Studio Code",
  "icon": "icon.png",
  "author": "Holger Benl <hbenl@evandor.de>",
  "publisher": "hbenl",
  "version": "0.1.2",
  "license": "MIT",
  "homepage": "https://github.com/hbenl/vscode-test-explorer",
  "repository": {
    "type": "git",
    "url": "https://github.com/hbenl/vscode-test-explorer.git"
  },
  "bugs": {
    "url": "https://github.com/hbenl/vscode-test-explorer/issues"
  },
  "categories": [
    "Other"
  ],
  "keywords": [
    "test",
    "testing"
  ],
  "main": "out/main.js",
  "scripts": {
    "postinstall": "node ./node_modules/vscode/bin/install",
    "reinstall": "rimraf node_modules package-lock.json && npm install",
    "clean": "rimraf out vscode-test-explorer-*.vsix",
    "build": "tsc",
    "watch": "tsc -w",
    "rebuild": "npm run clean && npm run build",
    "package": "vsce package",
    "publish": "vsce publish"
  },
  "dependencies": {
    "escape-string-regexp": "^1.0.5",
    "fs-extra": "^6.0.1",
    "tslib": "^1.9.1",
    "vscode-test-adapter-api": "^0.3.0"
  },
  "devDependencies": {
    "@types/escape-string-regexp": "0.0.32",
    "@types/fs-extra": "^5.0.2",
    "typescript": "^2.8.3",
    "vsce": "^1.40.0",
    "vscode": "^1.1.17"
  },
  "engines": {
    "vscode": "^1.23.0"
  },
  "activationEvents": [
    "onView:test-explorer",
    "onCommand:test-explorer.reload",
    "onCommand:test-explorer.run-all",
    "onCommand:test-explorer.cancel"
  ],
  "contributes": {
    "configuration": {
      "type": "object",
      "title": "Configuration for the Test Explorer extension",
      "properties": {
        "testExplorer.onStart": {
          "description": "Retire or reset all test states whenever a test run is started",
          "type": [
            "string",
            "null"
          ],
          "enum": [
            "retire",
            "reset",
            null
          ],
          "scope": "resource"
        },
        "testExplorer.onReload": {
          "description": "Retire or reset all test states whenever the test tree is reloaded",
          "type": [
            "string",
            "null"
          ],
          "enum": [
            "retire",
            "reset",
            null
          ],
          "scope": "resource"
        }
      }
    },
    "views": {
      "test": [
        {
          "id": "test-explorer",
          "name": "Test Explorer"
        }
      ]
    },
    "commands": [
      {
        "command": "test-explorer.reload",
        "title": "Test Explorer: Reload tests",
        "icon": {
          "dark": "./icons/reload-dark.svg",
          "light": "./icons/reload-light.svg"
        }
      },
      {
        "command": "test-explorer.reload-collection",
        "title": "Reload tests"
      },
      {
        "command": "test-explorer.run-all",
        "title": "Test Explorer: Run all tests",
        "icon": {
          "dark": "./icons/start-dark.svg",
          "light": "./icons/start-light.svg"
        }
      },
      {
        "command": "test-explorer.run",
        "title": "Run tests",
        "icon": {
          "dark": "./icons/start-dark.svg",
          "light": "./icons/start-light.svg"
        }
      },
      {
        "command": "test-explorer.debug",
        "title": "Debug this test",
        "icon": {
          "dark": "./icons/debug-dark.svg",
          "light": "./icons/debug-light.svg"
        }
      },
      {
        "command": "test-explorer.cancel",
        "title": "Test Explorer: Cancel running tests",
        "icon": "./icons/stop.svg"
      },
      {
        "command": "test-explorer.selected",
        "title": "Test tree item selected"
      },
      {
        "command": "test-explorer.show-source",
        "title": "Show source"
      },
      {
        "command": "test-explorer.enable-autorun",
        "title": "Enable autorun"
      },
      {
        "command": "test-explorer.disable-autorun",
        "title": "Disable autorun"
      },
      {
        "command": "test-explorer.retire",
        "title": "Retire test states"
      },
      {
        "command": "test-explorer.reset",
        "title": "Reset test states"
      }
    ],
    "menus": {
      "view/title": [
        {
          "command": "test-explorer.run-all",
          "group": "navigation@1",
          "when": "view == test-explorer && !testsRunning"
        },
        {
          "command": "test-explorer.cancel",
          "group": "navigation@2",
          "when": "view == test-explorer && testsRunning"
        },
        {
          "command": "test-explorer.reload",
          "group": "navigation@3",
          "when": "view == test-explorer"
        },
        {
          "command": "test-explorer.enable-autorun",
          "group": "1_autorun@1",
          "when": "view == test-explorer"
        },
        {
          "command": "test-explorer.disable-autorun",
          "group": "1_autorun@2",
          "when": "view == test-explorer"
        },
        {
          "command": "test-explorer.retire",
          "group": "2_state@3",
          "when": "view == test-explorer"
        },
        {
          "command": "test-explorer.reset",
          "group": "2_state@4",
          "when": "view == test-explorer"
        }
      ],
      "view/item/context": [
        {
          "command": "test-explorer.run",
          "group": "inline@2",
          "when": "view == test-explorer"
        },
        {
          "command": "test-explorer.debug",
          "group": "inline@1",
          "when": "view == test-explorer && viewItem == test"
        },
        {
          "command": "test-explorer.reload-collection",
          "group": "1_reload",
          "when": "view == test-explorer && viewItem == collection"
        },
        {
          "command": "test-explorer.show-source",
          "group": "3_show@3",
          "when": "view == test-explorer && viewItem == test"
        },
        {
          "command": "test-explorer.enable-autorun",
          "group": "4_autorun@4",
          "when": "view == test-explorer"
        },
        {
          "command": "test-explorer.disable-autorun",
          "group": "4_autorun@5",
          "when": "view == test-explorer"
        },
        {
          "command": "test-explorer.retire",
          "group": "5_state@6",
          "when": "view == test-explorer"
        },
        {
          "command": "test-explorer.reset",
          "group": "5_state@7",
          "when": "view == test-explorer"
        }
      ],
      "commandPalette": [
        {
          "command": "test-explorer.reload-collection",
          "when": "false"
        },
        {
          "command": "test-explorer.run",
          "when": "false"
        },
        {
          "command": "test-explorer.debug",
          "when": "false"
        },
        {
          "command": "test-explorer.selected",
          "when": "false"
        },
        {
          "command": "test-explorer.show-source",
          "when": "false"
        },
        {
          "command": "test-explorer.enable-autorun",
          "when": "false"
        },
        {
          "command": "test-explorer.disable-autorun",
          "when": "false"
        },
        {
          "command": "test-explorer.retire",
          "when": "false"
        },
        {
          "command": "test-explorer.reset",
          "when": "false"
        }
      ]
    }
  }
}
